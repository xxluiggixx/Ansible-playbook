---
# Descarga de los em.properties
- name: Backup em.properties
  hosts: all
  become: yes
  tasks:
    - name: Download *.war 
      ansible.builtin.fetch:
        src: "{{ path_dest_em }}"
        dest: "{{ path_bck }}{{ inventory_hostname }}"
        flat: yes

- name: Backup files
  hosts: "{{host_bck}}"
  become: yes
  tasks:
    - name: Download *.war 
      ansible.builtin.fetch:
        src: "{{ path_dest }}{{ war_filename }}.war"
        dest: "{{ path_bck }}{{ war_filename }}.war.{{ bck_ver }}"
        flat: yes
        
- name: Webserver deploy
  hosts: all
  become: yes
  tasks:
    - name: Stop tomcat services
      ansible.builtin.service:
        name: tomcat
        state: stopped 

    - name: Delete all *.war
      ansible.builtin.file:
        dest: "{{path_dest}}{{ war_filename }}.war"
        state: absent
      ansible.builtin.file:
        dest: "{{path_dest}}{{ war_filename }}"
        state: absent

    - name: Copy *.war
      ansible.builtin.copy:
        src: "/tmp/{{ war_filename }}.war"
        dest: "{{ path_dest }}{{ war_filename }}.war"

    - name: Start tomcat services
      ansible.builtin.service:
        name: tomcat
        state: started

- name: Upload em.properties
  hosts: all
  become: yes
  tasks:
    - name: Sleep for a few seconds
      ansible.builtin.wait_for:
        timeout: 10  # Tiempo de espera en segundos
        state: started
      #subir los em.properties
    - name: Copy em.properties
      ansible.builtin.copy:
        src: "{{ path_bck }}{{ inventory_hostname }}"
        dest: "{{ path_dest_em }}" 

    - name: Change version on em.properties
      ansible.builtin.replace:
        path: "{{ path_dest_em }}"
        after: 'tramix.system.version =' 
        regexp: '(.+)$'
        replace: "\1{{ new_version }}"

    - name: Restart tomcat services
      ansible.builtin.service:
        name: tomcat
        state: restarted